syntax = "proto3";

package tigera.goldmane.v1;

import "tigera/goldmane/v1/goldmane.proto";
import "google/api/client.proto";

option csharp_namespace = "Goldmane";
option go_package = "tigera.golang.org/genproto/goldmane/v1;goldmane";
option java_multiple_files = true;
option java_outer_classname = "Goldmane";
option java_package = "com.goldmane.v1"; 
option objc_class_prefix = "GMN";
option php_namespace = "Goldmane";
option ruby_package = "Goldmane";

// Flows provides APIs for querying aggregated Flow data.
//
// The returned Flows will be aggregated across cluster nodes, as well as the specified aggregation
// time interval.
service Flows {
  option (google.api.default_host) = "cloud.tigera.io";
  // List is an API call to query for one or more Flows.
  rpc List(FlowListRequest) returns (FlowListResult);

  // Stream is an API call to return a long running stream of new Flows as they are generated.
  rpc Stream(FlowStreamRequest) returns (stream FlowResult);

  // FilterHints can be used to discover available filter criteria, such as
  // Namespaces and source / destination names. It allows progressive filtering of criteria based on
  // other filters. i.e., return the flow destinations given a source namespace.
  // Note that this API provides hints to the UI based on past flows and other values may be valid.
  rpc FilterHints(FilterHintsRequest) returns (FilterHintsResult);
}

// FlowListRequest defines a message to request a particular selection of aggregated Flow objects.
message FlowListRequest {
  // StartTimeGt specifies the beginning of a time window with which to filter Flows. Flows
  // will be returned only if their start time is greater than or equal to the given value.
  //
  // - A value of zero indicates the oldest start time available by the server.
  // - A value greater than zero indicates an absolute time in seconds since the Unix epoch.
  // - A value less than zero indicates a relative number of seconds from "now", as determined by the server.
  int64 start_time_gte = 1;

  // StartTimeLt specifies the end of a time window with which to filter flows. Flows will
  // be returned only if their start time occurs before the requested time.
  //
  // - A value of zero means "now", as determined by the server at the time of request.
  // - A value greater than zero indicates an absolute time in seconds since the Unix epoch.
  // - A value less than zero indicates a relative number of seconds from "now", as determined by the server.
  int64 start_time_lt = 2;

  // Page specifies the page to return. It requires that PageSize is also specified in order
  // to determine page boundaries. Note that pages may change over time as new flow data is collected or expired.
  // Querying the same page at different points in time may return different results.
  int64 page = 3;

  // PageSize configures the maximum number of results to return as part of this query.
  int64 page_size = 4;

  // SortBy configures how to sort the results of this query. By default flows are sorted by start time.
  // The returned list is sorted by each sort option, in order, using the next sort option in the list as a tie-breaker.
  // Note: At the moment, only a single sort option is supported.
  repeated SortOption sort_by = 5;

  // Filter allows specification of one or more criteria on which to filter the returned Flows.
  Filter filter = 6;

  // AggregationInterval is the width of the time window in seconds across which to aggregate when generating
  // Flows to return. This must be a multiple of 15.
  int64 aggregation_interval = 7;
}

// FlowListResult is a message containing a list of FlowResults and ListMetadata.
message FlowListResult {
  // Meta specifies metadata about the returned flows.
  ListMetadata meta = 1;

  // Flows is a list of FlowResult objects.
  repeated FlowResult flows = 2;
}

// FlowStreamRequest defines a message to request a stream of aggregated Flows.
message FlowStreamRequest {
  // StartTimeGt specifies the beginning of a time window from which to stream Flows. Flows
  // will be streamed only if their start time is greater than or equal to the given value.
  //
  // - A value of zero means "now", as determined by the server at the time of request.
  // - A value greater than zero indicates an absolute time in seconds since the Unix epoch.
  // - A value less than zero indicates a relative number of seconds from "now", as determined by the server.
  int64 start_time_gte = 1;

  // Filter allows specification of one or more criteria on which to filter the returned Flows.
  Filter filter = 2;

  // AggregationInterval defines both the frequency of streamed updates for each Flow, and the amount of time that FlowResult covers.
  // It must always be 15s.
  //
  // Every AggregationInterval the server must send a FlowResult containing the aggregated data for that Flow from a
  // time interval of width AggregationInterval.
  //
  // For a Flow that has continuous traffic, the server should send updates covering the range
  // [now-2*AggregationInterval, now-AggregationInterval] so that the data is reasonably likely to be complete.
  int64 aggregation_interval = 3;
}

// FlowResult wraps a Flow object with additional metadata.
message FlowResult {
  // ID is an opaque integer value ID that can be used to identify a Flow, and is 1:1 with the FlowKey.
  // Note that this ID is not valid across server restarts. Its primary use-case is for correlating FlowResult
  // updates from a Stream request.
  int64 id = 1;

  // The Flow object itself.
  Flow flow = 2;
}

message FilterHintsRequest {
  // Type is type of Filter to query.
  FilterType type = 1;

  // Filter is a set of filter criteria used to narrow down returned results.
  Filter filter = 2;

  // StartTimeGt specifies the beginning of a time window with which to filter (inclusive).
  //
  // - A value of zero indicates the oldest start time available by the server.
  // - A value greater than zero indicates an absolute time in seconds since the Unix epoch.
  // - A value less than zero indicates a relative number of seconds from "now", as determined by the server.
  int64 start_time_gte = 3;

  // StartTimeLt specifies the end of a time window with which to filter.
  //
  // - A value of zero means "now", as determined by the server at the time of request.
  // - A value greater than zero indicates an absolute time in seconds since the Unix epoch.
  // - A value less than zero indicates a relative number of seconds from "now", as determined by the server.
  int64 start_time_lt = 4;

  // Page specifies the page number to return. It requires that PageSize is also specified in order
  // to determine page boundaries. Note that pages may change over time as new flow data is collected or expired.
  // Querying the same page at different points in time may return different results.
  int64 page = 5;

  // PageSize configures the maximum number of results to return as part of this query.
  int64 page_size = 6;
}

message FilterHintsResult {
  // ListMetadata specifies list information about the flows returned.
  ListMetadata meta = 1;

  // FilterHint contains the values that flows can be filtered on.
  repeated FilterHint hints = 2;
}
